# Python Programming

# LIST COMPREHENSIONS

>>> list=[-4,-2,0,2,4]
>>> list
[-4, -2, 0, 2, 4]
>>> [i*2 for i in list] # create a list with the values doubled
[-8, -4, 0, 4, 8]
>>> [i for i in list if i>0 ] # filter the list to exclude neg values
[2, 4]
>>> [abs(i)for i in list] # apply a function to all elements
[4, 2, 0, 2, 4]
>>> |-2|=-(-2)=2
  File "<stdin>", line 1
    |-2|=-(-2)=2
    ^
SyntaxError: invalid syntax
>>> 

>>> fruits=['apple','banana','guava','peers']
>>> [i.strip() for i in fruits]
['apple', 'banana', 'guava', 'peers']
>>> fruits=[' apple',' banana ','guava ',' peers']
>>> [i.strip() for i in fruits]
['apple', 'banana', 'guava', 'peers']
>>> [(i,i**2)for i in range(10)] # list of 2-tuples (no, squares)
[(0, 0), (1, 1), (2, 4), (3, 9), (4, 16), (5, 25), (6, 36), (7, 49), (8, 64), (9, 81)]
>>> [ i,i**2 for i in range(10) ] # list of 2-tuples (no, squares)
  File "<stdin>", line 1
    [ i,i**2 for i in range(10) ] # list of 2-tuples (no, squares)
               ^
SyntaxError: invalid syntax
>>> list=[[1,2,3],[2,3,4],[4,5,6]]
>>> [j for j in i for i in list]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'i' is not defined
>>> for i in list:
...     for j in i:
...             print(j)
... 
1
2
3
2
3
4
4
5
6
>>> [j for i in list for j in i]
[1, 2, 3, 2, 3, 4, 4, 5, 6]
>>>

>>> [str(round(pi,i)) for i in range(1,10)]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 1, in <listcomp>
NameError: name 'pi' is not defined
>>> round(3.1409,2)
3.14
>>> import math
>>> [str(round(pi,i)) for i in range(1,10)]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 1, in <listcomp>
NameError: name 'pi' is not defined
>>> dir(math)
['__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'ceil', 'copysign', 'cos', 'cosh', 'degrees', 'e', 'erf', 'erfc', 'exp', 'expm1', 'fabs', 'factorial', 'floor', 'fmod', 'frexp', 'fsum', 'gamma', 'gcd', 'hypot', 'inf', 'isclose', 'isfinite', 'isinf', 'isnan', 'ldexp', 'lgamma', 'log', 'log10', 'log1p', 'log2', 'modf', 'nan', 'pi', 'pow', 'radians', 'remainder', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'tau', 'trunc']
>>> from math import pi
>>> [str(round(pi,i)) for i in range(1,10)]
['3.1', '3.14', '3.142', '3.1416', '3.14159', '3.141593', '3.1415927', '3.14159265', '3.141592654']
>>> [str(round(pi,i)) for i in range(1,4)]
['3.1', '3.14', '3.142']
>>> 

>>> matrix=[]
>>> matrix=[
...     [1,2,3,4],
...     [2,3,4,5],
...     [3,4,5,6],
... ]
>>> matrix
[[1, 2, 3, 4], [2, 3, 4, 5], [3, 4, 5, 6]]
>>> [[row[i] for row in matrix] for i in range(5)]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 1, in <listcomp>
  File "<stdin>", line 1, in <listcomp>
IndexError: list index out of range
>>> [[row[i] for row in matrix] for i in range(4)]
[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6]]
>>> 


>>> matrix=[
...     [1,2,3,4],
...     [2,3,4,5],
...     [3,4,5,6],
... ]
>>> matrix
[[1, 2, 3, 4], [2, 3, 4, 5], [3, 4, 5, 6]]
>>> transpose=[] # if 4X3 matrix it will become 3X4
>>> for i in range(4):
...     transpose.append([row[i] for row in matrix])
... 
>>> transpose # 4X3
[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6]]
>>> matrix # 3X4
[[1, 2, 3, 4], [2, 3, 4, 5], [3, 4, 5, 6]]
>>> 


>>> matrix
[[1, 2, 3, 4], [2, 3, 4, 5], [3, 4, 5, 6]]
>>> transpose=[]
>>> for i in range(4):
...     transpose_row=[]
...     for row in matrix:
...             transpose_row.append(row[i])
...     transpose.append(transpose_row)
... 
>>> transpose
[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6]]
>>> 


>>> matrix=[[1, 2, 3, 4], [2, 3, 4, 5], [3, 4, 5, 6]]
>>> list(zip(*matrix))
[(1, 2, 3), (2, 3, 4), (3, 4, 5), (4, 5, 6)]
>>> 
>>> list(zip(*matrix)) # zip() is a function
[(1, 2, 3), (2, 3, 4), (3, 4, 5), (4, 5, 6)]
>>> 


>>> list=[-1,0,1.2,1.34,333]
>>> del list[0]
>>> list
[0, 1.2, 1.34, 333]
>>> del list[2:4]
>>> list
[0, 1.2]
>>> del list[:]
>>> list
[]
>>> del list
>>> list
<class 'list'>
>>> 


>>> t=1234,3456,'helloworld!'
>>> t
(1234, 3456, 'helloworld!')
>>> t[0]
1234
>>> r=t,(1,3,4,5)
>>> r
((1234, 3456, 'helloworld!'), (1, 3, 4, 5))
>>> t[0]
1234
>>> list=[1,2,3]
>>> list[0]=23
>>> list  # mutable
[23, 2, 3]
>>> t
(1234, 3456, 'helloworld!')
>>> t[0]=1 # immutable
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'tuple' object does not support item assignment
>>> 

>>> vec=([1,2,3],[2,3,4])
>>> vec
([1, 2, 3], [2, 3, 4])
>>> vec[0]
[1, 2, 3]
>>> vec[0]=(1,23,3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'tuple' object does not support item assignment
>>> 


>>> a='aiufsifrgnagljnl'
>>> len(a)
16
>>> empty=[]
>>> len(empty)
0
>>> single='helloworld!!!'
>>> len(single)
13
>>> 

>>> a,b,c=2,3,4
>>> a
2
>>> b
3
>>> c
4
>>> t
(1234, 3456, 'helloworld!')
>>> a,b,c=t
>>> a
1234
>>> b
3456
>>> c
'helloworld!'
>>> 

# sets

